/*
 * The MIT License
 *
 * Copyright 2021 Daniel Melgarejo Garc√≠a.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package window;

import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;

/**
 *
 * @author Daniel Melgarejo Garcia
 */
public class window extends javax.swing.JFrame {
    private int hundredthsSecond = 0, seconds = 0, minutes = 0, hours = 0;
    private Timer time;
    private ActionListener timeActions = new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent ae) {
            hundredthsSecond++;
            if (hundredthsSecond == 100) {
                seconds++;
                hundredthsSecond = 0;
            }
            if (seconds == 60) {
                minutes++;
                seconds = 0;
            }
            if (minutes == 60) {
                hours++;
                minutes = 0;
            }
            
            updateLabelTime();
        }
    };
    
    private void updateLabelTime() {
        String text;
        text = (hours<=9?"0":"")+hours+(minutes<=9?":0":":")+
                minutes+(seconds<=9?":0":":")+seconds+
                (hundredthsSecond<=9?":0":":")+hundredthsSecond;
        labelTime.setText(text);
    }

    /**
     * Creates new form window
     */
    public window() {
        initComponents();
        setLocationRelativeTo(null);
        time = new Timer(10, timeActions);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new javax.swing.JPanel();
        labelTime = new javax.swing.JLabel();
        buttonStart = new javax.swing.JButton();
        buttonPause = new javax.swing.JButton();
        buttonReset = new javax.swing.JButton();
        labelImage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        panel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        labelTime.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 32)); // NOI18N
        labelTime.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTime.setText("00:00:00:00");
        panel.add(labelTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 190, 250, 70));

        buttonStart.setBackground(new java.awt.Color(190, 255, 255));
        buttonStart.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        buttonStart.setText("Start");
        buttonStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonStartActionPerformed(evt);
            }
        });
        panel.add(buttonStart, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 320, 90, 30));

        buttonPause.setBackground(new java.awt.Color(190, 255, 255));
        buttonPause.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        buttonPause.setText("Pause");
        buttonPause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPauseActionPerformed(evt);
            }
        });
        panel.add(buttonPause, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 320, 80, 30));

        buttonReset.setBackground(new java.awt.Color(190, 255, 255));
        buttonReset.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        buttonReset.setText("Reset");
        buttonReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonResetActionPerformed(evt);
            }
        });
        panel.add(buttonReset, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 320, 80, 30));

        labelImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Chronometer.png"))); // NOI18N
        panel.add(labelImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonPauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPauseActionPerformed
        time.stop();
        buttonStart.setEnabled(true);
        buttonPause.setEnabled(false);
    }//GEN-LAST:event_buttonPauseActionPerformed

    private void buttonStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonStartActionPerformed
        time.start();
        buttonStart.setEnabled(false);
        buttonStart.setText("Continue");
        buttonStart.setFont(new Font("Arial", Font.BOLD, 13));
        buttonPause.setEnabled(true);
        buttonReset.setEnabled(true);
    }//GEN-LAST:event_buttonStartActionPerformed

    private void buttonResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonResetActionPerformed
        if (time.isRunning()) {
            time.stop();
            buttonStart.setEnabled(true);
        }
        buttonPause.setEnabled(false);
        buttonReset.setEnabled(false);
        buttonStart.setText("Start");
        buttonStart.setFont(new Font("Arial", Font.BOLD, 14));
        
        hours = 0;
        minutes = 0;
        seconds = 0;
        hundredthsSecond = 0;
        updateLabelTime();
    }//GEN-LAST:event_buttonResetActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new window().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonPause;
    private javax.swing.JButton buttonReset;
    private javax.swing.JButton buttonStart;
    private javax.swing.JLabel labelImage;
    private javax.swing.JLabel labelTime;
    private javax.swing.JPanel panel;
    // End of variables declaration//GEN-END:variables
}
